<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Model;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \Application\Model\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'name', 'image', 'email', 'password', 'admin', 'partner', 'affiliateCode', 'defaultLang', 'status', 'clientCollection', 'roleCollection', '' . "\0" . 'Application\\Model\\User' . "\0" . 'logCollection', '' . "\0" . 'Application\\Model\\User' . "\0" . 'messageCollection', '' . "\0" . 'Application\\Model\\User' . "\0" . 'clientDataCollection', 'productActivityCollection', 'tradeCollection', 'tourUserCollection', 'id', 'created', 'updated', 'inputFilter');
        }

        return array('__isInitialized__', 'name', 'image', 'email', 'password', 'admin', 'partner', 'affiliateCode', 'defaultLang', 'status', 'clientCollection', 'roleCollection', '' . "\0" . 'Application\\Model\\User' . "\0" . 'logCollection', '' . "\0" . 'Application\\Model\\User' . "\0" . 'messageCollection', '' . "\0" . 'Application\\Model\\User' . "\0" . 'clientDataCollection', 'productActivityCollection', 'tradeCollection', 'tourUserCollection', 'id', 'created', 'updated', 'inputFilter');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', array());

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', array($image));

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', array());

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword($password)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', array($password));

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getAdmin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAdmin', array());

        return parent::getAdmin();
    }

    /**
     * {@inheritDoc}
     */
    public function setAdmin($admin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAdmin', array($admin));

        return parent::setAdmin($admin);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartner()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartner', array());

        return parent::getPartner();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartner($partner)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartner', array($partner));

        return parent::setPartner($partner);
    }

    /**
     * {@inheritDoc}
     */
    public function getAffiliateCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffiliateCode', array());

        return parent::getAffiliateCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setAffiliateCode($affiliateCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAffiliateCode', array($affiliateCode));

        return parent::setAffiliateCode($affiliateCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getDefaultLang()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDefaultLang', array());

        return parent::getDefaultLang();
    }

    /**
     * {@inheritDoc}
     */
    public function setDefaultLang($defaultLang)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDefaultLang', array($defaultLang));

        return parent::setDefaultLang($defaultLang);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', array());

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', array($status));

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientCollection', array());

        return parent::getClientCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function addClient(\Application\Model\Client $client)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClient', array($client));

        return parent::addClient($client);
    }

    /**
     * {@inheritDoc}
     */
    public function addProductActivity(\Inventory\Model\ProductActivity $productActivity)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProductActivity', array($productActivity));

        return parent::addProductActivity($productActivity);
    }

    /**
     * {@inheritDoc}
     */
    public function getProductActivityCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProductActivityCollection', array());

        return parent::getProductActivityCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function addTradeCollection(\Inventory\Model\Trade $trade)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTradeCollection', array($trade));

        return parent::addTradeCollection($trade);
    }

    /**
     * {@inheritDoc}
     */
    public function getTradeCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTradeCollection', array());

        return parent::getTradeCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function addTourUser(\Application\Model\TourUser $tourUser)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTourUser', array($tourUser));

        return parent::addTourUser($tourUser);
    }

    /**
     * {@inheritDoc}
     */
    public function getTourUserCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTourUserCollection', array());

        return parent::getTourUserCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoleCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoleCollection', array());

        return parent::getRoleCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function addRole(\Application\Model\RoleUser $role)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRole', array($role));

        return parent::addRole($role);
    }

    /**
     * {@inheritDoc}
     */
    public function getLogCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLogCollection', array());

        return parent::getLogCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function addLog($log)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLog', array($log));

        return parent::addLog($log);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessageCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessageCollection', array());

        return parent::getMessageCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function addMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addMessage', array($message));

        return parent::addMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function addClientData($clientData)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClientData', array($clientData));

        return parent::addClientData($clientData);
    }

    /**
     * {@inheritDoc}
     */
    public function getClientDataCollection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientDataCollection', array());

        return parent::getClientDataCollection();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated($created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function getUpdated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUpdated', array());

        return parent::getUpdated();
    }

    /**
     * {@inheritDoc}
     */
    public function setUpdated($updated)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUpdated', array($updated));

        return parent::setUpdated($updated);
    }

    /**
     * {@inheritDoc}
     */
    public function setData($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setData', array($data));

        return parent::setData($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getData', array());

        return parent::getData();
    }

    /**
     * {@inheritDoc}
     */
    public function exchangeArray($data)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'exchangeArray', array($data));

        return parent::exchangeArray($data);
    }

    /**
     * {@inheritDoc}
     */
    public function getArrayCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', array());

        return parent::getArrayCopy();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', array());

        return parent::toArray();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', array());

        return parent::__toString();
    }

}
